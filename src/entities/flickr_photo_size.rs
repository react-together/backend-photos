//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.8

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "flickr_photo_size")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub flickr_photo_id: u64,
    pub server_id: String,
    pub secret: String,
    pub suffix: String,
    pub width: u32,
    pub height: u32,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::flickr_photo::Entity",
        from = "Column::FlickrPhotoId",
        to = "super::flickr_photo::Column::FlickrId",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    FlickrPhoto,
}

impl Related<super::flickr_photo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FlickrPhoto.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
